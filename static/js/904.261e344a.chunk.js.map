{"version":3,"file":"static/js/904.261e344a.chunk.js","mappings":"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","sources":["components/Filtering/Filtering.module.css","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contacts.selector.js","components/Filtering/Filtering.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/App.module.css?6c4d","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\nexport const selectContacts = state => state.spravochnik.contacts;\nexport const selectIsLoading = state => state.spravochnik.isLoading;\nexport const selectError = state => state.spravochnik.error;\nexport const selectFilterTerm = state => state.contactsStore.filterTerm;\n\n\nexport const selectVisibleContacts = createSelector(\n    [ selectContacts, selectFilterTerm],\n     (contacts, filterTerm) => {\n       return contacts.filter(contact => contact.name.toLowerCase()\n        .includes(filterTerm.toLowerCase()))\n     }\n    )","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {inputFilter} from 'redux/contacts/contacts.reducer';\nimport css from './Filtering.module.css';\nimport { selectFilterTerm } from 'redux/contacts/contacts.selector';\nconst Filtering = () => {\n    const filter = useSelector(selectFilterTerm);\n    const dispatch = useDispatch();\n\n  const handleInputFilter = event => {\n    const value = event.target.value;\n    dispatch(inputFilter(value));\n  \n  };\n    return (\n        \n        <div>\n            <p className={css.labelText}>Find contacts by name</p>\n            <input type=\"text\" value={filter}  onChange={handleInputFilter}/>\n        </div> \n       \n    );\n\n}\nexport default Filtering;","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactForm_button__eSwX9\",\"form\":\"ContactForm_form__dhl+T\"};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","\nimport React, { useState } from 'react';\nimport { addContact } from 'redux/contacts/contacts.reducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactForm.module.css';\nimport { nanoid } from 'nanoid';\nimport { selectContacts } from 'redux/contacts/contacts.selector';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n   const [name, setName] = useState('');\n   const [phone, setNumber] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const contactData = {\n      name,\n      phone\n    };\n    \n    handleAddProduct(contactData);\n    form.reset();\n  };\n\n  const handleAddProduct = contactData => {\n    const isExist = contacts.some(\n      contact => contact.name === contactData.name\n    );\n\n    if (isExist) {\n      alert(`${contactData.name} is already in contacts.`);\n      return\n    }\n\n    const finalNames = {\n      ...contactData,\n      id: nanoid(),\n    };\n    dispatch(addContact(finalNames));\n\n  };\n\n  const handleInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name; \n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  \n    return (\n        \n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.formLabel}>\n          <p className={css.labelText}>Name</p>\n          <input type=\"text\" name=\"name\" required onChange={handleInputChange}/>\n        </label>\n        <label className={css.formLabel}>\n          <p className={css.labelText}>Number</p>\n          <input type=\"tel\" name=\"number\" required onChange={handleInputChange}/>\n        </label> <br />\n        <button className={css.button} type=\"submit\">Add contact</button>\n      </form>\n    );\n \n\n}\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"button\":\"ContactList_button__7kL4l\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"name\":\"ContactItem_name__XjpNK\",\"number\":\"ContactItem_number__mfZ8x\"};","import React from 'react';\nimport css from './ContactItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts.reducer';\n\nconst ContactItem = ({ contact }) => {\n      const dispatch = useDispatch();\n\n      const handleDeleteContacts = contactId => {\n            dispatch(deleteContact(contactId));\n          };\n      \n      \n      return (\n          \n                  <li key={contact.id} className={css.item}>\n                        <span className={css.name}>{contact.name}</span>\n                        <span className={css.number}>{contact.phone}</span>\n                         <button className={css.button} onClick={() => handleDeleteContacts(contact.id)}\n                        type=\"button\">Delete</button>\n                  </li>\n\n      )  ; \n          \n      \n};\nexport default ContactItem;","\nimport css from './ContactList.module.css';\nimport React, { useEffect } from 'react';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts} from 'redux/contacts/contacts.reducer';\nimport { selectContacts, selectFilterTerm, selectVisibleContacts} from 'redux/contacts/contacts.selector';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  let contacts = useSelector(selectContacts);\n  const filterContacts = useSelector(selectVisibleContacts);\n  const filter = useSelector(selectFilterTerm);\n  if (filter.length > 0) {\n       contacts = filterContacts;   }\n  \n \n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch]);\n\n       return (\n        <ul className={css.list}>  \n         {contacts.map(contact => (\n              <ContactItem contact={contact} key={contact.id}/> \n        ))  }\n        </ul>\n  )  ; \n  \n}\nexport default ContactList;\n    \n    \n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"App_container__ZdBeZ\"};","import React from 'react';\nimport Filtering from 'components/Filtering/Filtering';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport css from 'components/App.module.css';\n\nconst ContactsPage = () => {\n  return (\n    <div className={css.container}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filtering />\n        <ContactList />\n     </div>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","spravochnik","contacts","selectFilterTerm","contactsStore","filterTerm","selectVisibleContacts","filter","contact","toLowerCase","includes","useSelector","dispatch","useDispatch","_jsxs","children","_jsx","className","css","type","onChange","event","target","inputFilter","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","phone","setNumber","handleAddProduct","contactData","some","alert","finalNames","_objectSpread","addContact","handleInputChange","onSubmit","preventDefault","form","currentTarget","reset","required","_ref","onClick","contactId","deleteContact","filterContacts","useEffect","fetchContacts","ContactItem","ContactForm","Filtering","ContactList"],"sourceRoot":""}